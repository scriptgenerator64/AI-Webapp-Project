"""add size_bytes to Document

Revision ID: 76e4c8c4153b
Revises: 
Create Date: 2025-05-09 15:02:23.069551

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = '76e4c8c4153b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('documents', schema=None) as batch_op:
        batch_op.add_column(sa.Column('size_bytes', sa.Integer(), nullable=False))
        batch_op.alter_column('filename',
               existing_type=sa.VARCHAR(length=256),
               type_=sa.String(length=255),
               existing_nullable=False)
        batch_op.alter_column('content',
               existing_type=sa.TEXT(),
               type_=sa.LargeBinary(),
               nullable=False)
        batch_op.create_unique_constraint(None, ['hash'])
        batch_op.drop_column('updated_at')
        batch_op.drop_column('meta')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('documents', schema=None) as batch_op:
        batch_op.add_column(sa.Column('meta', sqlite.JSON(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), nullable=True))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('content',
               existing_type=sa.LargeBinary(),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('filename',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=256),
               existing_nullable=False)
        batch_op.drop_column('size_bytes')

    # ### end Alembic commands ###
